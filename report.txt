import numpy as np
import neuralNetwork 
from os.path  import join
from datasetLoad import MnistDataloader

input_path = r'C:\programs\projects\NN\input'
training_images_filepath = join(input_path, 'train-images-idx3-ubyte/train-images-idx3-ubyte')
training_labels_filepath = join(input_path, 'train-labels-idx1-ubyte/train-labels-idx1-ubyte')
test_images_filepath = join(input_path, 't10k-images-idx3-ubyte/t10k-images-idx3-ubyte')
test_labels_filepath = join(input_path, 't10k-labels-idx1-ubyte/t10k-labels-idx1-ubyte')


mnist_dataloader = MnistDataloader(training_images_filepath, training_labels_filepath, test_images_filepath, test_labels_filepath)
(x_train, y_train), (x_test, y_test) = mnist_dataloader.load_data()

x_train = np.array(x_train)
x_test = np.array(x_test)

# print(x_test[1],y_test[1])

# Flatten the training and test images
x_train_flat = x_train.reshape(x_train.shape[0], -1)  
x_test_flat = x_test.reshape(x_test.shape[0], -1)     

testInputs = [784 ,3,784,16,'relu',16,16,'relu',16,10,'sigmoid']
model = neuralNetwork.ModelTest(testInputs)

'''
input parameters = 784
number of layers = 3

layer 1:
number of input: 784
number of neurons: 16
Enter the activation funtion: relu

layer 2:
number of input: 16
number of neurons: 16
Enter the activation funtion: relu

layer 3:
number of input: 16
number of neurons: 10
Enter the activation funtion: sigmoid
'''

for x,y in zip(x_test_flat,y_test):
    x = np.array([x])
    model.train(x,y)